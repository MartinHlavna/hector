# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application


on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest] #FIXME:, macos-latest
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install GCC for linux
      uses: egor-tensin/setup-gcc@v1.3
      if: matrix.os == 'ubuntu-latest'
    - name: Install GCC for windows
      uses: e-t-l/setup-mingw@patch-1
      if: matrix.os == 'windows-latest'
    - name: Install hunspell for linux
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libhunspell-dev
    - name: Download the file
      if: matrix.os == 'windows-latest'
      id: downloadfile  # Remember to give an ID if you need the output
      uses: suisei-cn/actions-download-file@818d6b7dc8fe73f2f924b6241f2b1134ca1377d9 # 1.6.0Â´
      with:
        url: "https://github.com/iquiw/hunspell-binary/releases/download/v1.7.2/hunspell-v1.7.2.7z"
        target: downloads/
        filename: hunspell.7z
        auto-match: false
        retry-times: 3
    - name: extract-7z-action
      if: matrix.os == 'windows-latest'
      uses: DuckSoft/extract-7z-action@v1.0
      with:
        pathSource: "${{steps.downloadfile.outputs.filename}}"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest
