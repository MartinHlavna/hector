# This workflow will install Python dependencies, run tests and lint with a single version of Python, then build with nuitka
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Nuitka build

on:
  # RELEASE BUILD
  release:
    types: [published]
  # MANUAL BUILD
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  # NIGHTLY BUILD
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: read

jobs:
  build:
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: hector.bin
            asset_name: hector-linux-amd64.bin
            disable_console: false
          - os: windows-latest
            artifact_name: hector.exe
            asset_name: hector-windows-amd64.exe
            disable_console: true
          - os: windows-latest
            artifact_name: hector.exe
            asset_name: hector-windows-amd64-debug.exe
            disable_console: false
#          - os: macos-latest
#            artifact_name: hector.bin
#            asset_name: hector-macos-arm64.bin
#          - os: macos-13
#            artifact_name: hector.bin
#            asset_name: hector-macos-amd64.bin

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: 'pip'
      - name: Install GCC for linux
        uses: egor-tensin/setup-gcc@v1.3
        if: matrix.os == 'ubuntu-latest'
      - name: Install hunspell dependencies for linux
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt install -y autoconf libtool gettext autopoint
      - name: Install requirements for macOS
        if: matrix.os == 'macos-latest' || matrix.os == 'macos-13'
        run: brew install automake autoconf libtool
      - name: Symlink tcl 8.6 for macos-13
        if: matrix.os == 'macos-13'
        run: |
          ln -s /Users/runner/hostedtoolcache/PyPy/3.7.13/x64/lib/libtcl8.6.dylib /usr/local/lib/libtcl8.6.dylib
          ln -s /Users/runner/hostedtoolcache/PyPy/3.7.13/x64/lib/libtk8.6.dylib /usr/local/lib/libtk8.6.dylib
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install imageio
          pip install -r requirements.txt
      - name: Build Executable
        uses: Nuitka/Nuitka-Action@main
        with:
          nuitka-version: develop
          script-name: hector.py
          onefile: true
          enable-plugins: tk-inter
          include-package: |
            ttkthemes
            cacheman
            hunspell
          include-package-data: |
            ttkthemes
            hunspell
          include-module: | 
            fsspec.implementations.github
            spacy.lexeme
          include-data-dir: |
            images=images
            fonts=fonts
            data_files=data_files
          disable-console: ${{ matrix.disable_console }}
          windows-icon-from-ico: images/hector-icon-white-edge.png
          macos-app-icon: images/hector-icon-white-edge.png
          #TODO #1: macos-create-app-bundle: true
      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.asset_name }}.zip
          path: |
            build/*.bin
            build/*.exe
            build/*.app/**/*
          compression-level: 0 #NUITKA ALREADY COMPRESSES
      - name: Try to execute linux binary
        id: execute-linux-binary
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install xvfb
          export DISPLAY=:99
          Xvfb :99 -screen 0 1024x768x16 &
          ${GITHUB_WORKSPACE}/.github/scripts/test-linux-binary.sh build/${{matrix.artifact_name}}
      - name: Try to execute windows binary
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          # Run the PowerShell script
          & "${env:GITHUB_WORKSPACE}\.github\scripts\test-windows-binary.ps1" -ProgramPath "build\${{ matrix.artifact_name }}"
      - name: Upload binary to release
        if: |
          github.event_name == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: build/${{matrix.artifact_name}}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
  update_readme:
    permissions: write-all
    runs-on: 'ubuntu-latest'
    needs: ['build']
    if: |
      github.event_name == 'release'
    steps:
      - name: Update download links
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: update-download-links
